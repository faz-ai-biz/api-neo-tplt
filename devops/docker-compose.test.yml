services:

  test-hot:
    env_file:
      - .env.test  
    container_name: ${COMPOSE_PROJECT_NAME:-api}_web_hot_${ENVIRONMENT:-test}
    restart: "no"
    build:
      context: ..
      dockerfile: devops/Dockerfile.test
    depends_on:
      - db
    environment:
      ENVIRONMENT: test
      PYTHONPATH: /app
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
      - ../devops:/app/devops
      - ../docs:/app/docs
      - ../pyproject.toml:/app/pyproject.toml
      - ../poetry.lock:/app/poetry.lock
    entrypoint: ["/app/devops/scripts/test-hot.sh"]

  test:
    env_file:
      - .env.test  
    container_name: ${COMPOSE_PROJECT_NAME:-api}_web_${ENVIRONMENT:-test}
    restart: "no"
    build:
      context: ..
      dockerfile: devops/Dockerfile.test
    depends_on:
      - db
    environment:
      ENVIRONMENT: test
      PYTHONPATH: /app

  db:
    env_file:
      - .env.test
    container_name: ${COMPOSE_PROJECT_NAME:-api}_db_${ENVIRONMENT:-test}
    restart: "no"
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"

  redis:
    env_file:
      - .env.test
    container_name: ${COMPOSE_PROJECT_NAME:-api}_redis_${ENVIRONMENT:-test}
    image: redis:alpine
    ports:
      - "6379:6379"
    command: redis-server --save "" --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
